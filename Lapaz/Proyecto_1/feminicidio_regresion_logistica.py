# -*- coding: utf-8 -*-
"""Feminicidio_regresion_logistica

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UMC8xTBGrxuXZ8BJE3YXaWwlkqQUx2wa
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

url_train_set = 'https://raw.githubusercontent.com/Marseonji/Feminicidio/master/EL%20VALOR%20DE%20T%C3%9A%20VERDAD_train.csv'
train_set = pd.read_csv(url_train_set,sep= ';')

url_test_set = 'https://raw.githubusercontent.com/Marseonji/Feminicidio/master/EL%20VALOR%20DE%20T%C3%9A%20VERDAD_test.csv'
test_set = pd.read_csv(url_test_set,sep= ';')

train_set.head()

test_set.head()

train_set['genero'].replace(['Femenino','Masculino'],[0,1],inplace= True)
test_set['genero'].replace(['Femenino','Masculino'],[0,1],inplace= True)
train_set['clase_social'].replace(['Baja','Media','Alta'],[0,1,2],inplace= True)
test_set['clase_social'].replace(['Baja','Media','Alta'],[0,1,2],inplace= True)
train_set['Target'].replace(['NO','SI'],[0,1],inplace= True)

test_set['1'].replace(['NO','SI'],[0,1],inplace= True)
train_set['1'].replace(['NO','SI'],[0,1],inplace= True)
test_set['2'].replace(['NO','SI'],[0,1],inplace= True)
train_set['2'].replace(['NO','SI'],[0,1],inplace= True)
test_set['3'].replace(['NO','SI'],[0,1],inplace= True)
train_set['3'].replace(['NO','SI'],[0,1],inplace= True)
test_set['4'].replace(['NO','SI'],[0,1],inplace= True)
train_set['4'].replace(['NO','SI'],[0,1],inplace= True)
test_set['5'].replace(['NO','SI'],[0,1],inplace= True)
train_set['5'].replace(['NO','SI'],[0,1],inplace= True)
test_set['6'].replace(['NO','SI'],[0,1],inplace= True)
train_set['6'].replace(['NO','SI'],[0,1],inplace= True)
test_set['7'].replace(['NO','SI'],[0,1],inplace= True)
train_set['7'].replace(['NO','SI'],[0,1],inplace= True)
test_set['8'].replace(['NO','SI'],[0,1],inplace= True)
train_set['8'].replace(['NO','SI'],[0,1],inplace= True)
test_set['9'].replace(['NO','SI'],[0,1],inplace= True)
train_set['9'].replace(['NO','SI'],[0,1],inplace= True)
test_set['10'].replace(['NO','SI'],[0,1],inplace= True)
train_set['10'].replace(['NO','SI'],[0,1],inplace= True)

train_set = train_set.drop(['num'],axis=1)
test_set = test_set.drop(['num','Target'],axis=1)

train_set=train_set.dropna(axis=0,how='all') 
test_set=test_set.dropna(axis=0,how='all')

train_set.head()

test_set.head()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

x = np.array(train_set.drop(['Target'],1))
y= np.array(train_set['Target'])

X_train, X_test, y_train, y_test = train_test_split(x,y, test_size = 0.2)

# Primero entrenamos haciendo uso del algoritmo de regresionm logistica
#fit une las dos variables separadas, que se entrene
# Para luego poder predecir
logreg = LogisticRegression()
logreg.fit(X_train, y_train)
y_pred = logreg.predict(X_test)
print("Precision regresion Logistica:")
print(logreg.score(X_train, y_train))

prediccion_logreg = logreg.predict(test_set)
out_logreg=pd.DataFrame({'Target':prediccion_logreg})

print('Prediccion Regresion logistica')
print(out_logreg.head(35))

from sklearn.metrics import classification_report,confusion_matrix

cm = np.array(confusion_matrix(y_test, y_pred, 
                               labels=[1,0]))
confusion = pd.DataFrame(cm, index=['es posible feminicida',
                        'no es posible feminicida'], 
                         columns=['predice si es',
                                'predice si no es'])
confusion